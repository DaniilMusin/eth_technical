#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üöÄ –ü–†–û–°–¢–û–ô –ó–ê–ü–£–°–ö WALK FORWARD –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø
"""

import os
import sys

def main():
    """–ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—É—Å–∫ walk forward —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–ê–ü–£–°–ö WALK FORWARD –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø ETH –°–¢–†–ê–¢–ï–ì–ò–ò")
    print("="*60)
    print("üìä –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...")
    print("üîÑ –ö–∞–∂–¥—ã–π –ø–µ—Ä–∏–æ–¥ –≤–∫–ª—é—á–∞–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é + —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")
    print("="*60)
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–µ—Å—Ç–µ—Ä
        from walk_forward_tester import WalkForwardTester
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        data_path = "../ETHUSDT-15m-2018-2025.csv"
        
        if not os.path.exists(data_path):
            print(f"‚ùå –§–∞–π–ª –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω: {data_path}")
            print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª ETHUSDT-15m-2018-2025.csv –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –ø–∞–ø–∫–µ")
            return
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–µ—Ä —Å –∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
        tester = WalkForwardTester(
            data_path=data_path,
            output_dir=".",  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ç–µ–∫—É—â—É—é –ø–∞–ø–∫—É walk_forward_data
            train_months=6,  # 6 –º–µ—Å—è—Ü–µ–≤ –æ–±—É—á–µ–Ω–∏—è
            test_months=1,   # 1 –º–µ—Å—è—Ü —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è  
            min_data_points=3000,  # –£–º–µ–Ω—å—à–∏–ª–∏ –¥–ª—è –±–æ–ª–µ–µ —á–∞—Å—Ç—ã—Ö —Ç–µ—Å—Ç–æ–≤
            initial_balance=10000
        )
        
        print(f"\n‚öôÔ∏è  –ù–ê–°–¢–†–û–ô–ö–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
        print(f"üìä –û–±—É—á–µ–Ω–∏–µ: {tester.train_months} –º–µ—Å—è—Ü–µ–≤")
        print(f"üìà –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {tester.test_months} –º–µ—Å—è—Ü")
        print(f"üí∞ –ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${tester.initial_balance:,}")
        print(f"üìã –ü–µ—Ä–∏–æ–¥–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {len(tester.periods)}")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        print(f"\nüîÑ –ù–∞—á–∏–Ω–∞–µ–º walk forward —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...")
        results = tester.run_walk_forward_test()
        
        if results:
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            print(f"\nüìä –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã...")
            stats = tester.analyze_walk_forward_results()
            
            # –°—Ç—Ä–æ–∏–º –≥—Ä–∞—Ñ–∏–∫–∏
            print(f"\nüìà –°—Ç—Ä–æ–∏–º –≥—Ä–∞—Ñ–∏–∫–∏...")
            tester.plot_walk_forward_results()
            
            print(f"\n‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!")
            print(f"üìÅ –í—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫–µ: walk_forward_data/")
            print(f"üìä –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã:")
            print(f"   ‚Ä¢ results/summary_results.csv - –°–≤–æ–¥–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞")
            print(f"   ‚Ä¢ results/walk_forward_results.json - –î–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã")
            print(f"   ‚Ä¢ results/walk_forward_analysis.png - –ì—Ä–∞—Ñ–∏–∫–∏")
            print(f"   ‚Ä¢ results/walk_forward_analysis.json - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
            
        else:
            print(f"\n‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ –¥–∞–ª–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
            
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã:")
        print("pip install -r requirements.txt")
        
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å —Ñ–∞–π–ª–æ–≤ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")

if __name__ == "__main__":
    main()